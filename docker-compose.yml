version: '3.8'

services:
  # 개발 환경
  estimate-webapp-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: estimate-webapp-dev
    ports:
      - "5002:5002"
    volumes:
      - .:/app
      - estimate-data:/app/data
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-change-in-production}
    restart: unless-stopped
    profiles:
      - dev
    networks:
      - estimate-network

  # 프로덕션 환경
  estimate-webapp-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: estimate-webapp-prod
    ports:
      - "5002:5002"
    volumes:
      - estimate-data:/app/data
      - estimate-logs:/var/log/estimate-app
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY}
    restart: always
    profiles:
      - prod
    networks:
      - estimate-network
    depends_on:
      - estimate-webapp-backup

  # 백업 서비스
  estimate-webapp-backup:
    image: alpine:3.18
    container_name: estimate-backup
    volumes:
      - estimate-data:/data
      - ./backups:/backups
    environment:
      - BACKUP_INTERVAL=${BACKUP_INTERVAL:-86400}  # 24시간
    command: >
      sh -c "
        while true; do
          echo 'Creating backup...'
          cp /data/estimate.db /backups/estimate_$$(date +%Y%m%d_%H%M%S).db 2>/dev/null || true
          find /backups -name 'estimate_*.db' -mtime +7 -delete 2>/dev/null || true
          echo 'Backup completed. Sleeping for $$BACKUP_INTERVAL seconds...'
          sleep $$BACKUP_INTERVAL
        done
      "
    restart: unless-stopped
    profiles:
      - prod
    networks:
      - estimate-network

  # Nginx 리버스 프록시 (선택사항)
  nginx:
    image: nginx:1.25-alpine
    container_name: estimate-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - estimate-logs:/var/log/nginx
    depends_on:
      - estimate-webapp-prod
    restart: always
    profiles:
      - nginx
    networks:
      - estimate-network

volumes:
  estimate-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data
  estimate-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs

networks:
  estimate-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16